// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OIT_Startup_API.Data;

#nullable disable

namespace OIT_Startup_API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250923144108_AddAuthenticationEntities")]
    partial class AddAuthenticationEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemGroup")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3488),
                            Description = "Amministratori di sistema",
                            IsActive = true,
                            IsSystemGroup = true,
                            Name = "Administrators",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3489)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3491),
                            Description = "Utenti standard",
                            IsActive = true,
                            IsSystemGroup = true,
                            Name = "Users",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3491)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3493),
                            Description = "Manager con privilegi estesi",
                            IsActive = true,
                            IsSystemGroup = false,
                            Name = "Managers",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3493)
                        });
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.GroupPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("GrantedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GrantedBy")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("GroupId", "PermissionId")
                        .IsUnique();

                    b.ToTable("GroupPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3678),
                            GroupId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            Id = 2,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3683),
                            GroupId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            Id = 3,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3684),
                            GroupId = 1,
                            PermissionId = 3
                        },
                        new
                        {
                            Id = 4,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3684),
                            GroupId = 1,
                            PermissionId = 4
                        },
                        new
                        {
                            Id = 5,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3685),
                            GroupId = 1,
                            PermissionId = 5
                        },
                        new
                        {
                            Id = 6,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3686),
                            GroupId = 1,
                            PermissionId = 6
                        },
                        new
                        {
                            Id = 7,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3687),
                            GroupId = 1,
                            PermissionId = 7
                        },
                        new
                        {
                            Id = 8,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3687),
                            GroupId = 1,
                            PermissionId = 8
                        },
                        new
                        {
                            Id = 9,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3687),
                            GroupId = 1,
                            PermissionId = 9
                        },
                        new
                        {
                            Id = 10,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3720),
                            GroupId = 2,
                            PermissionId = 1
                        },
                        new
                        {
                            Id = 11,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3721),
                            GroupId = 2,
                            PermissionId = 8
                        },
                        new
                        {
                            Id = 12,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3721),
                            GroupId = 3,
                            PermissionId = 1
                        },
                        new
                        {
                            Id = 13,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3722),
                            GroupId = 3,
                            PermissionId = 3
                        },
                        new
                        {
                            Id = 14,
                            GrantedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3723),
                            GroupId = 3,
                            PermissionId = 8
                        });
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Resource", "Action")
                        .IsUnique();

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Read",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3577),
                            IsActive = true,
                            Name = "Visualizza Menu",
                            Resource = "Menu",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3577)
                        },
                        new
                        {
                            Id = 2,
                            Action = "Manage",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3581),
                            IsActive = true,
                            Name = "Gestisci Menu",
                            Resource = "Menu",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3581)
                        },
                        new
                        {
                            Id = 3,
                            Action = "Read",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3582),
                            IsActive = true,
                            Name = "Visualizza Utenti",
                            Resource = "User",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3583)
                        },
                        new
                        {
                            Id = 4,
                            Action = "Create",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3583),
                            IsActive = true,
                            Name = "Crea Utenti",
                            Resource = "User",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3584)
                        },
                        new
                        {
                            Id = 5,
                            Action = "Update",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3585),
                            IsActive = true,
                            Name = "Modifica Utenti",
                            Resource = "User",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3585)
                        },
                        new
                        {
                            Id = 6,
                            Action = "Delete",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3587),
                            IsActive = true,
                            Name = "Elimina Utenti",
                            Resource = "User",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3587)
                        },
                        new
                        {
                            Id = 7,
                            Action = "Manage",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3588),
                            IsActive = true,
                            Name = "Gestisci Gruppi Sicurezza",
                            Resource = "SecurityGroup",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3588)
                        },
                        new
                        {
                            Id = 8,
                            Action = "Read",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3589),
                            IsActive = true,
                            Name = "Visualizza Reports",
                            Resource = "Report",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3589)
                        },
                        new
                        {
                            Id = 9,
                            Action = "Manage",
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3590),
                            IsActive = true,
                            Name = "Gestisci Sistema",
                            Resource = "System",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3590)
                        });
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3753),
                            Email = "admin@oit.it",
                            EmailConfirmed = true,
                            FirstName = "System",
                            IsActive = true,
                            LastName = "Administrator",
                            PasswordHash = "$2a$11$rQiU3oyF8qRUQ2PmVYxqTOKnZEPGO4TL4EW8NXZxKoGcHoSLe6LNu",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3753),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssignedBy")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId", "GroupId")
                        .IsUnique();

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3775),
                            GroupId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Menu.MenuGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Order");

                    b.ToTable("MenuGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3783),
                            IsActive = true,
                            Order = 1,
                            Title = "Credenziali",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3783)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3785),
                            IsActive = true,
                            Order = 2,
                            Title = "Dashboard",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3785)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3786),
                            IsActive = true,
                            Order = 3,
                            Title = "Gestione",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3786)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3787),
                            IsActive = true,
                            Order = 4,
                            Title = "Analisi",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3787)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3788),
                            IsActive = true,
                            Order = 5,
                            Title = "Sistema",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3788)
                        });
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Menu.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MenuGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("QueryParams")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Route")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("MenuGroupId");

                    b.HasIndex("Order");

                    b.HasIndex("ParentId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3800),
                            Icon = "list",
                            IsActive = true,
                            MenuGroupId = 1,
                            Order = 1,
                            QueryParams = "\"{}\"",
                            Route = "/credentials",
                            Title = "Tutte le credenziali",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3801)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3803),
                            Icon = "check_circle",
                            IsActive = true,
                            MenuGroupId = 1,
                            Order = 2,
                            QueryParams = "\"{\\u0022active\\u0022:true}\"",
                            Route = "/credentials",
                            Title = "Credenziali attive",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3803)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3990),
                            Icon = "error",
                            IsActive = true,
                            MenuGroupId = 1,
                            Order = 3,
                            QueryParams = "\"{\\u0022expired\\u0022:true}\"",
                            Route = "/credentials",
                            Title = "Credenziali scadute",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(3990)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4031),
                            Icon = "update",
                            IsActive = true,
                            MenuGroupId = 1,
                            Order = 4,
                            QueryParams = "\"{\\u0022sort\\u0022:\\u0022created\\u0022,\\u0022sortDirection\\u0022:\\u0022desc\\u0022}\"",
                            Route = "/credentials",
                            Title = "Credenziali recenti",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4031)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4086),
                            Icon = "dashboard",
                            IsActive = true,
                            MenuGroupId = 2,
                            Order = 1,
                            QueryParams = "\"{}\"",
                            Route = "/dashboard",
                            Title = "Panoramica",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4086)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4087),
                            Icon = "bar_chart",
                            IsActive = true,
                            MenuGroupId = 2,
                            Order = 2,
                            QueryParams = "\"{}\"",
                            Route = "/stats",
                            Title = "Statistiche",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4087)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4089),
                            Icon = "people",
                            IsActive = true,
                            MenuGroupId = 3,
                            Order = 1,
                            QueryParams = "\"{}\"",
                            Route = "",
                            Title = "Utenti",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4089)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4090),
                            Icon = "inventory",
                            IsActive = true,
                            MenuGroupId = 3,
                            Order = 2,
                            QueryParams = "\"{}\"",
                            Route = "",
                            Title = "Prodotti",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4090)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4091),
                            Icon = "list",
                            IsActive = true,
                            MenuGroupId = 3,
                            Order = 1,
                            ParentId = 7,
                            QueryParams = "\"{}\"",
                            Route = "/admin/users",
                            Title = "Lista Utenti",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4091)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4093),
                            Icon = "person_add",
                            IsActive = true,
                            MenuGroupId = 3,
                            Order = 2,
                            ParentId = 7,
                            QueryParams = "\"{}\"",
                            Route = "/admin/users/add",
                            Title = "Aggiungi Utente",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4093)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4094),
                            Icon = "admin_panel_settings",
                            IsActive = true,
                            MenuGroupId = 3,
                            Order = 3,
                            ParentId = 7,
                            QueryParams = "\"{}\"",
                            Route = "/admin/security-groups",
                            Title = "Gruppi Sicurezza",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4094)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4096),
                            Icon = "catalog",
                            IsActive = true,
                            MenuGroupId = 3,
                            Order = 1,
                            ParentId = 8,
                            QueryParams = "\"{}\"",
                            Route = "/products/catalog",
                            Title = "Catalogo",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4096)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4097),
                            Icon = "category",
                            IsActive = true,
                            MenuGroupId = 3,
                            Order = 2,
                            ParentId = 8,
                            QueryParams = "\"{}\"",
                            Route = "/products/categories",
                            Title = "Categorie",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4097)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4098),
                            Icon = "warehouse",
                            IsActive = true,
                            MenuGroupId = 3,
                            Order = 3,
                            ParentId = 8,
                            QueryParams = "\"{}\"",
                            Route = "/products/inventory",
                            Title = "Inventario",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4099)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4100),
                            Icon = "assessment",
                            IsActive = true,
                            MenuGroupId = 4,
                            Order = 1,
                            QueryParams = "\"{}\"",
                            Route = "/reports",
                            Title = "Reports",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4100)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4101),
                            Icon = "analytics",
                            IsActive = true,
                            MenuGroupId = 4,
                            Order = 2,
                            Route = "",
                            Title = "Analytics",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4101)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4102),
                            Icon = "insights",
                            IsActive = true,
                            MenuGroupId = 4,
                            Order = 1,
                            ParentId = 16,
                            QueryParams = "\"{}\"",
                            Route = "/analytics/overview",
                            Title = "Panoramica",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4103)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4104),
                            Icon = "trending_up",
                            IsActive = true,
                            MenuGroupId = 4,
                            Order = 2,
                            ParentId = 16,
                            QueryParams = "\"{}\"",
                            Route = "/analytics/sales",
                            Title = "Vendite",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4104)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4105),
                            Icon = "traffic",
                            IsActive = true,
                            MenuGroupId = 4,
                            Order = 3,
                            ParentId = 16,
                            QueryParams = "\"{}\"",
                            Route = "/analytics/traffic",
                            Title = "Traffico",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4105)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4106),
                            Icon = "tune",
                            IsActive = true,
                            MenuGroupId = 5,
                            Order = 1,
                            QueryParams = "\"{}\"",
                            Route = "/config",
                            Title = "Configurazione",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4107)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4108),
                            Icon = "list_alt",
                            IsActive = true,
                            MenuGroupId = 5,
                            Order = 2,
                            QueryParams = "\"{}\"",
                            Route = "/logs",
                            Title = "Log Sistema",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4108)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4109),
                            Icon = "help",
                            IsActive = true,
                            MenuGroupId = 5,
                            Order = 3,
                            QueryParams = "\"{}\"",
                            Route = "/support",
                            Title = "Supporto",
                            UpdatedAt = new DateTime(2025, 9, 23, 14, 41, 7, 192, DateTimeKind.Utc).AddTicks(4109)
                        });
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.GroupPermission", b =>
                {
                    b.HasOne("OIT_Startup_API.Models.Domains.Auth.Group", "Group")
                        .WithMany("GroupPermissions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OIT_Startup_API.Models.Domains.Auth.Permission", "Permission")
                        .WithMany("GroupPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.UserGroup", b =>
                {
                    b.HasOne("OIT_Startup_API.Models.Domains.Auth.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OIT_Startup_API.Models.Domains.Auth.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Menu.MenuItem", b =>
                {
                    b.HasOne("OIT_Startup_API.Models.Domains.Menu.MenuGroup", "MenuGroup")
                        .WithMany("Items")
                        .HasForeignKey("MenuGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OIT_Startup_API.Models.Domains.Menu.MenuItem", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MenuGroup");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.Group", b =>
                {
                    b.Navigation("GroupPermissions");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.Permission", b =>
                {
                    b.Navigation("GroupPermissions");
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Auth.User", b =>
                {
                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Menu.MenuGroup", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OIT_Startup_API.Models.Domains.Menu.MenuItem", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
